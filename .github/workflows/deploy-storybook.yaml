on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      deployments: write
      statuses: write

    name: Publish to Cloudflare Pages
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          cache: 'npm'
          node-version-file: 'package.json'

      - name: Install Packages
        run: npm install

      - name: Build
        run: npm run build-storybook

      - name: Deploy to Cloudflare Pages
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy storybook-static --project-name=tama-river-client-storybook

      - name: Add publish URL as commit status
        uses: actions/github-script@v7
        with:
          script: |
            const sha = context.payload.pull_request?.head.sha ?? context.sha;
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              context: 'Cloudflare Pages',
              description: 'Cloudflare Pages deployment',
              state: 'success',
              sha,
              target_url: "${{ steps.deploy.outputs.url }}",
            });
      - uses: chrnorm/deployment-action@v2
        name: Create GitHub deployment
        id: deployment
        with:
          token: '${{ github.token }}'
          environment-url: '${{ steps.deploy.outputs.deployment-url }}'
          environment: storybook

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@v2
        with:
          token: '${{ github.token }}'
          environment-url: "${{ steps.deploy.outputs.deployment-url }}"
          state: 'success'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@v2
        with:
          token: '${{ github.token }}'
          environment-url: "${{ steps.deploy.outputs.deployment-url }}"
          state: 'failure'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
